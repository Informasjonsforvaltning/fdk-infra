---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: flux-system
spec:
  interval: 5m
  targetNamespace: monitoring
  chart:
    spec:
      version: 39.x
      chart: kube-prometheus-stack
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
      interval: 60m
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    grafana:
      service:
        type: LoadBalancer
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
      persistence:
        enabled: true
        type: pvc
        size: 10Gi
    prometheus:
      service:
        type: LoadBalancer
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
      prometheusSpec:
        # allow Prometheus to discover all PodMonitors/ServiceMonitors within its namespace, without applying label filtering
        podMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: standard
              resources:
                requests:
                  storage: 10Gi
        additionalScrapeConfigs:
          - job_name: kubernetes-service-endpoints
            kubernetes_sd_configs:
              - role: service
            relabel_configs:
              # annotation 'prometheus.io/scrape' must be set to 'true'
              - action: keep
                regex: true
                source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              # service cannot be in kube-system or prom namespaces
              - action: drop
                regex: (kube-system|prom)
                source_labels: [__meta_kubernetes_namespace]
              # service port name must end with word 'metrics'
              - action: keep
                regex: .*metrics
                source_labels: [__meta_kubernetes_service_port_name]
              # allow override of http scheme
              - action: replace
                regex: (https?)
                source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
                target_label: __scheme__
              # allow override of default /metrics path
              - action: replace
                regex: (.+)
                source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
                target_label: __metrics_path__
              # allow override of default port
              - action: replace
                regex: ([^:]+)(?::\d+)?;(\d+)
                replacement: $1:$2
                source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
                target_label: __address__
              - action: labelmap
                regex: __meta_kubernetes_service_label_(.+)
              - action: replace
                source_labels: [__meta_kubernetes_namespace]
                target_label: kubernetes_namespace
              - action: replace
                source_labels: [__meta_kubernetes_service_name]
                target_label: kubernetes_name
